@import url("https://fonts.googleapis.com/css?family=Montserrat:400,700|Noto+Sans:400,700");
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  font-size: 100%;
  vertical-align: baseline; }

html {
  line-height: 1; }

ol, ul {
  list-style: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

caption, th, td {
  text-align: left;
  font-weight: normal;
  vertical-align: middle; }

q, blockquote {
  quotes: none; }

q:before, q:after, blockquote:before, blockquote:after {
  content: "";
  content: none; }

a img {
  border: none; }

article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {
  display: block; }

*, *:before, *:after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

/* === Calc Mixin ==== */
/* ==== Usage example
@include calc( width, '100% - 2px');
===================*/
/* This is to override the box-sizing mixin in compass so that the deprecated warning doesn't show */
@font-face {
  font-family: 'Material-Design-Iconic-Font';
  src: url("../fonts/Material-Design-Iconic-Font.woff2?v=2.2.0") format("woff2"), url("../fonts/Material-Design-Iconic-Font.woff?v=2.2.0") format("woff"), url("../fonts/Material-Design-Iconic-Font.ttf?v=2.2.0") format("truetype");
  font-weight: normal;
  font-style: normal; }

div.globalWrapper {
  width: 100%;
  float: left; }

.container {
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto; }
  .container:after {
    content: " ";
    display: block;
    clear: both; }

header.mainHeader {
  width: 100%;
  float: left; }
  header.mainHeader div.logo {
    width: 100%;
    float: left; }

div.about {
  width: 100%;
  float: left; }
  div.about div.sectionHeader, div.about p {
    clear: both;
    width: 97.5%;
    float: left;
    margin-left: 1.25%;
    margin-right: 1.25%; }

div.companies {
  width: 100%;
  float: left; }
  div.companies div.left {
    width: 47.5%;
    float: left;
    margin-left: 1.25%;
    margin-right: 1.25%; }
    @media (max-width: 425px) {
      div.companies div.left {
        clear: both;
        width: 97.5%;
        float: left;
        margin-left: 1.25%;
        margin-right: 1.25%; } }
  div.companies div.right {
    width: 47.5%;
    float: left;
    margin-left: 1.25%;
    margin-right: 1.25%; }
    @media (max-width: 425px) {
      div.companies div.right {
        clear: both;
        width: 97.5%;
        float: left;
        margin-left: 1.25%;
        margin-right: 1.25%; } }

div.contact {
  width: 100%;
  float: left; }
  div.contact div.sectionHeader {
    clear: both;
    width: 97.5%;
    float: left;
    margin-left: 1.25%;
    margin-right: 1.25%; }
  div.contact div.content {
    width: 100%;
    float: left; }
  div.contact div.left {
    width: 47.5%;
    float: left;
    margin-left: 1.25%;
    margin-right: 1.25%; }
    @media (max-width: 425px) {
      div.contact div.left {
        clear: both;
        width: 97.5%;
        float: left;
        margin-left: 1.25%;
        margin-right: 1.25%; } }
    div.contact div.left ul {
      width: 100%;
      float: left; }
  div.contact div.right {
    width: 47.5%;
    float: left;
    margin-left: 1.25%;
    margin-right: 1.25%; }
    @media (max-width: 425px) {
      div.contact div.right {
        clear: both;
        width: 97.5%;
        float: left;
        margin-left: 1.25%;
        margin-right: 1.25%; } }
    div.contact div.right ul {
      width: 100%;
      float: left; }

footer.mainFooter {
  width: 100%;
  float: left; }

/* ================ GLOBAL STYLES ================ */
body {
  font-family: "Noto Sans", sans-serif;
  font-size: 16px;
  font-weight: noraml;
  color: #000;
  background: #f5f5f5; }
  body:before, body:after {
    content: " ";
    display: table; }
  body:after {
    clear: both; }
  body a, body button, body input {
    text-decoration: none;
    -webkit-transition: all .3s;
    -o-transition: all .3s;
    transition: all .3s; }

.fIcon {
  font-family: "FontAwesome";
  font-weight: normal !important;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-feature-settings: 'liga';
          font-feature-settings: 'liga'; }

.mIcon {
  font-family: "Material Icons";
  font-weight: normal !important;
  font-style: normal !important;
  font-size: 24px;
  /* Preferred icon size */
  /*display: inline-block;*/
  line-height: 1;
  text-transform: none;
  letter-spacing: normal;
  word-wrap: normal;
  white-space: nowrap;
  direction: ltr;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-feature-settings: 'liga';
          font-feature-settings: 'liga'; }

.mIcon2 {
  font-family: "Material-Design-Iconic-Font";
  font-weight: normal !important;
  font-style: normal !important;
  font-size: 24px;
  /* Preferred icon size */
  /*display: inline-block;*/
  line-height: 1;
  text-transform: none;
  letter-spacing: normal;
  word-wrap: normal;
  white-space: nowrap;
  direction: ltr;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-feature-settings: 'liga';
          font-feature-settings: 'liga'; }

a.backToTop {
  width: 40px;
  height: 40px;
  -webkit-border-radius: 50%;
          border-radius: 50%;
  line-height: 40px;
  position: fixed;
  bottom: 10px;
  right: 10px;
  z-index: 99;
  background: #d22234;
  text-decoration: none;
  color: #ffffff;
  text-align: center;
  font-size: 18px;
  font-weight: normal;
  -webkit-transition: all .3s;
  -o-transition: all .3s;
  transition: all .3s;
  opacity: 0;
  visibility: hidden;
  -webkit-transform: scale(0);
      -ms-transform: scale(0);
          transform: scale(0); }
  a.backToTop:hover {
    background: #205f8e; }
  a.backToTop.show {
    opacity: 1;
    visibility: visible;
    -webkit-transform: scale(1);
        -ms-transform: scale(1);
            transform: scale(1); }

@media print {
  .noPrint, .noPrint * {
    display: none !important; } }

img {
  font-size: 0;
  color: #ffffff;
  max-width: 100%;
  height: auto;
  display: inline-block;
  vertical-align: middle; }

::-moz-selection {
  background: black;
  color: #ffffff; }

::selection {
  background: black;
  color: #ffffff; }

::-moz-selection {
  background: black;
  color: #ffffff; }

/* ===== Responsive Embed styles from bootstrap ===== */
.embed-responsive {
  position: relative;
  display: block;
  height: 0;
  padding: 0;
  overflow: hidden; }

.embed-responsive .embed-responsive-item,
.embed-responsive iframe,
.embed-responsive embed,
.embed-responsive object,
.embed-responsive video {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  height: 100%;
  width: 100%;
  border: 0; }

.embed-responsive-16by9 {
  padding-bottom: 56.25%; }

.embed-responsive-4by3 {
  padding-bottom: 75%; }

/* ===== Responsive Embed styles from bootstrap ===== */
/* ===== Custom Responsive Embed styles ===== */
div.videoWrapper {
  position: relative;
  padding-bottom: 56.25%;
  margin: 10px 0; }
  div.videoWrapper iframe {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    border: 0; }

/* ===== Global Styles ===== */
div.sectionHeader {
  text-align: center;
  position: relative;
  margin-bottom: 40px; }
  @media (max-width: 768px) {
    div.sectionHeader {
      margin-bottom: 20px; } }
  div.sectionHeader:before {
    content: "";
    width: 100%;
    height: 1px;
    display: block;
    background: #d9d9d9;
    position: absolute;
    left: 0;
    top: -webkit-calc(50% - 1px);
    top: calc(50% - 1px); }
    @media (max-width: 768px) {
      div.sectionHeader:before {
        top: -webkit-calc(50% - 3px);
        top: calc(50% - 3px); } }
  div.sectionHeader h3 {
    font-family: "Montserrat", sans-serif;
    font-size: 24px;
    color: #205f8e;
    text-transform: uppercase;
    display: inline-block;
    background: #ffffff;
    position: relative; }
    @media (max-width: 768px) {
      div.sectionHeader h3 {
        font-size: 18px; } }
    div.sectionHeader h3:before {
      content: "";
      display: inline-block;
      width: 10px;
      height: 10px;
      -webkit-border-radius: 50%;
              border-radius: 50%;
      background: #d22234;
      margin-bottom: 3px;
      margin-right: 20px; }
      @media (max-width: 768px) {
        div.sectionHeader h3:before {
          margin-right: 10px; } }
    div.sectionHeader h3:after {
      content: "";
      display: inline-block;
      width: 10px;
      height: 10px;
      -webkit-border-radius: 50%;
              border-radius: 50%;
      background: #d22234;
      margin-bottom: 3px;
      margin-left: 20px; }
      @media (max-width: 768px) {
        div.sectionHeader h3:after {
          margin-left: 10px; } }

header.mainHeader {
  height: 127px;
  background: #205f8e; }
  @media (max-width: 768px) {
    header.mainHeader {
      height: 95px; } }
  @media (max-width: 425px) {
    header.mainHeader {
      height: 57px; } }
  header.mainHeader div.logo {
    text-align: center; }
    header.mainHeader div.logo h1 {
      font: 0/0 a;
      color: transparent;
      text-shadow: none;
      width: 210px;
      display: block;
      margin: auto;
      position: relative;
      margin-top: 15px; }
      @media (max-width: 768px) {
        header.mainHeader div.logo h1 {
          width: 150px; } }
      @media (max-width: 425px) {
        header.mainHeader div.logo h1 {
          width: 80px; } }

div.about {
  margin-top: 100px;
  text-align: center; }
  @media (max-width: 425px) {
    div.about {
      margin-top: 50px; } }
  div.about h3 {
    background: #f5f5f5; }
  div.about p {
    line-height: 2;
    text-align: justify;
    -moz-text-align-last: center;
         text-align-last: center; }
    @media (max-width: 425px) {
      div.about p {
        line-height: 1.7; } }

div.companies {
  margin-top: 80px; }
  @media (max-width: 425px) {
    div.companies {
      margin-top: 50px; } }
  div.companies div.container {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex; }
    @media (max-width: 425px) {
      div.companies div.container {
        display: block; } }
  div.companies div.left, div.companies div.right {
    padding: 20px;
    background: #ffffff;
    -webkit-box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.1);
            box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.1); }
    @media (max-width: 425px) {
      div.companies div.left, div.companies div.right {
        padding: 10px; } }
    div.companies div.left div.brandLogo, div.companies div.right div.brandLogo {
      height: 100px;
      background: #f5f5f5;
      padding: 10px 0;
      display: -webkit-box;
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-align: center;
      -webkit-align-items: center;
          -ms-flex-align: center;
              align-items: center;
      margin-bottom: 20px; }
      div.companies div.left div.brandLogo h2, div.companies div.right div.brandLogo h2 {
        display: block;
        width: 120px;
        margin: auto; }
    div.companies div.left div.sectionHeader, div.companies div.right div.sectionHeader {
      margin-bottom: 15px; }
    div.companies div.left p, div.companies div.right p {
      line-height: 1.7;
      text-align: center; }
  @media (max-width: 425px) {
    div.companies div.right {
      margin-top: 30px; } }
  div.companies div.right div.brandLogo h2 {
    width: 200px; }

div.contact {
  margin-top: 80px; }
  @media (max-width: 425px) {
    div.contact {
      margin-top: 50px; } }
  div.contact div.content {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex; }
    @media (max-width: 425px) {
      div.contact div.content {
        display: block; } }
  div.contact h3 {
    background: #f5f5f5; }
  div.contact div.left, div.contact div.right {
    padding: 20px;
    background: #ffffff;
    -webkit-box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.1);
            box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.1); }
    @media (max-width: 425px) {
      div.contact div.left, div.contact div.right {
        padding: 10px; } }
    div.contact div.left div.branch, div.contact div.right div.branch {
      height: 100px;
      background: #f5f5f5;
      padding: 10px 0;
      margin-bottom: 20px;
      font-family: "Montserrat", sans-serif;
      text-transform: uppercase;
      text-align: center;
      display: -webkit-box;
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -webkit-flex-direction: column;
          -ms-flex-direction: column;
              flex-direction: column;
      -webkit-justify-content: space-around;
          -ms-flex-pack: distribute;
              justify-content: space-around; }
      div.contact div.left div.branch h2, div.contact div.right div.branch h2 {
        display: block;
        color: #205f8e;
        font-size: 24px; }
      div.contact div.left div.branch h3, div.contact div.right div.branch h3 {
        display: block;
        color: #d22234;
        font-size: 14px; }
    div.contact div.left li, div.contact div.right li {
      display: -webkit-box;
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-align: start;
      -webkit-align-items: flex-start;
          -ms-flex-align: start;
              align-items: flex-start;
      margin-top: 20px;
      padding-top: 20px;
      border-top: dashed 1px #d9d9d9; }
      div.contact div.left li:first-child, div.contact div.right li:first-child {
        margin: 0;
        border: none; }
      div.contact div.left li div.icon, div.contact div.right li div.icon {
        -webkit-flex-basis: 40px;
            -ms-flex-preferred-size: 40px;
                flex-basis: 40px;
        color: #205f8e; }
      div.contact div.left li div.info, div.contact div.right li div.info {
        -webkit-box-flex: 1;
        -webkit-flex: 1;
            -ms-flex: 1;
                flex: 1; }
        div.contact div.left li div.info h4, div.contact div.right li div.info h4 {
          font-family: "Montserrat", sans-serif;
          font-size: 17px;
          text-transform: uppercase;
          margin-bottom: 10px; }
        div.contact div.left li div.info p, div.contact div.right li div.info p {
          color: #6d8299;
          line-height: 1.7; }
        div.contact div.left li div.info a, div.contact div.right li div.info a {
          color: #6d8299; }
          div.contact div.left li div.info a:hover, div.contact div.right li div.info a:hover {
            color: #555555; }
  @media (max-width: 425px) {
    div.contact div.right {
      margin-top: 30px; } }

footer.mainFooter {
  margin-top: 80px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  height: 40px;
  background: #205f8e;
  color: #ffffff;
  font-family: "Montserrat", sans-serif;
  font-size: 12px;
  text-align: center; }
  @media (max-width: 425px) {
    footer.mainFooter {
      margin-top: 50px; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
